version: "3.3"

services:

  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8000:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - gateway

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - gateway

  ntcore-monitoring:
    image: "ntcore/monitoring:latest"
    container_name: "ntcore-monitoring"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitoring-console.rule=PathPrefix(`/dsp/console/monitoring`)"
      - "traefik.http.routers.monitoring-console.entrypoints=web"
      - "traefik.http.routers.monitoring-static.rule=PathPrefix(`/dsp/monitoring`)"
      - "traefik.http.routers.monitoring-static.entrypoints=web"
      - "traefik.http.routers.monitoring-api.rule=PathPrefix(`/dsp/api/v{[0-9]+}/monitoring`)"
      - "traefik.http.routers.monitoring-api.entrypoints=web"
    volumes:
      - "./app-config/ntcore.yml:/usr/src/app/app-config/ntcore.yml"
    networks:
      - gateway
    depends_on:
      - timescaledb
    command: bash -c 'while !</dev/tcp/timescaledb/5432; do sleep 1; done; npm run prod'

  ntcore:
    image: "ntcore/webserver:latest"
    container_name: "ntcore"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.public-console.rule=PathPrefix(`/dsp/console`)"
      - "traefik.http.routers.public-console.entrypoints=web"
      - "traefik.http.routers.public-static.rule=PathPrefix(`/dsp/public`)"
      - "traefik.http.routers.public-static.entrypoints=web"
      - "traefik.http.routers.public-api.rule=PathPrefix(`/dsp/api`)"
      - "traefik.http.routers.public-api.entrypoints=web"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - data:/usr/src/app/data
      - "./app-config/ntcore.yml:/usr/src/app/app-config/ntcore.yml"
    networks:
      - gateway

networks:
  gateway:
    driver: bridge

volumes:
  data: